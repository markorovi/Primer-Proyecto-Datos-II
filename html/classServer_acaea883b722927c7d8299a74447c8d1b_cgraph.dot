digraph "Server::Start"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Server::Start",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Se encarga de levantar el servidor el cual estara acargo del el manejo de la memoria."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Parser::CreateJsonObj\l_Address",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser.html#a9da5466387ebe39bcbf945006e4dc8ad",tooltip="Se encarga de generar un QJsonDocument el cual sera utilizado para cuando se reenviara al cliente el ..."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Parser::CreateJsonObj\l_ReturnsData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser.html#aff2bd851b26e34b071a1aa59b16060de",tooltip="Se encarga de generar un QJsonDocument el cual sera utilizado para reenviar los datos de una variable..."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Memory::Freeing_Memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMemory.html#a9ac8687489640f91fb75184426948413",tooltip="Se encarga de liberar un espacio en memoria."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Linked_List::delete_node",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLinked__List.html#a0754b2e38c07d74d1949f601cc4a6fff",tooltip="Se encarga de eliminar un nodo de la lista en base al nombre de la variable que almacena."];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Node::GetNext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#a6f8729374beb27838792dc6ef81124e8",tooltip="Getter para el siguiente nodo."];
  Node5 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Node::GetPosition",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#a2d31498b483a46807a1d05ec17e5a778",tooltip="Getter de la posision del noto."];
  Node5 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Node::SetNext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#ad42b093c5defbc14372468f669e2c102",tooltip="Setter para el siguiente nodo."];
  Node4 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Linked_List::GetHead",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLinked__List.html#afe7d4fb2cb3e8522ef11ab0668d797a0",tooltip="Se encarga de obtener la cabeza de la lista enlazada."];
  Node4 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Linked_List::returnPostion",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLinked__List.html#a61c3cff153e9177629fb7fc4f0a8b902",tooltip="Se encarga de retornar la posicion en la que se encuentra almacenado el nodo con respecto al offset."];
  Node10 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Node::GetName",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#a3108774b8ea5584a9c746d06f1427aa6",tooltip="Getter para el nombre del nodo."];
  Node10 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Memory::get_instance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMemory.html#ab4d08d8bab9c8be9095acd1d29bb8f76",tooltip="Singleton para la memoria."];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Node::GetAddress",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#a4a6d4eb86c79870471d267cb50de4d85",tooltip="Getter para la direccion del nodo."];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Memory::getInUse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMemory.html#ae6712364781dd2c879c9f7d2b5910d4a",tooltip="Getter para la lista en la que se encuentran los espacios de memoria en uso."];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Memory::Need_Memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMemory.html#a33fd5c5e117fccccd73f096f442c58f6",tooltip="Solicita memoria, lo que puede resultar en una sobreescritura, una nueva direccion o en el reciclaje ..."];
  Node15 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Linked_List::exists",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLinked__List.html#a34548d7c56f3ceffec8c1755e01caccd",tooltip="Se encarga de verificar si una variable se encuentra almacenada en una lista enlazada."];
  Node16 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Linked_List::returnAddress",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLinked__List.html#acf383a80747d6d43f3a2a200a98a7df4",tooltip="Se encarga de retornar el tipo de una variable almacenada en la lista enlazada."];
  Node17 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Memory::Rewrite",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMemory.html#a3f67f18d73916faaa30ee7fa6e0e9888",tooltip="Se encarga de sobreescribir una variable si esta ya existe."];
  Node15 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Memory::Using_Memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMemory.html#a76494a9f1c27c097f5a9d8af9f4ea818",tooltip="Se encarga de reservar un espacio en el offset para la nueva variable."];
  Node19 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Linked_List::add_node",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLinked__List.html#a79ecb670ca531916d40bcdd85fea08cc",tooltip="Se encarga de agregar un nodo a una lista."];
  Node20 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Node::SetAddress",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#ad2cd3f7b9789563475d11c8af628d791",tooltip="Setter para el address del nodo."];
  Node20 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="Node::SetName",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#a9b1802f40cf63be1cf5b919e7c2349d7",tooltip="Setter para el nombre del nodo."];
  Node20 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="Node::SetPosition",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#a5c5a1a1d179a0dc07b1a01d06629328b",tooltip=" "];
  Node20 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Node::SetType",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#a780de27eefc88bf10a2e4c7a52945934",tooltip="Setter para el tipo del nodo."];
  Node1 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Parser::Nothing",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser.html#a175a76a4539f2ce2707285e56ec09129",tooltip="Se encarga de generar un QJsonDocument el cual sera utilizado como un simple mensaje vacio que sera e..."];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Parser::ReturnChar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser.html#a14c84fbe6631aae8f29fe69e8f1c7706",tooltip="Se encarga de convertir un QJsonDocument a un std::string."];
  Node1 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="Parser::ReturnJson",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser.html#a1998f6e94de23ab34fbe3b2bdf2cded4",tooltip="Se encarga de convertir un conjuto de chars en el QJsonDocumt."];
  Node1 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="Parser::ReturnStringValue\lFromJson",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser.html#a5cd53f410523f743237e478db376ea33",tooltip="Se encarga de obtener un valor especifico de un QJsonDocument."];
  Node1 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="Linked_List::returnValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLinked__List.html#a3b00cee10f3f33b3405611b19951095f",tooltip="Se encarga de retornar el valor que contiene el nodo que se busca."];
  Node29 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="Node::GetType",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classNode.html#adf624c376b6156caccd208c443941b30",tooltip="Getter para el tipo del nodo."];
}
